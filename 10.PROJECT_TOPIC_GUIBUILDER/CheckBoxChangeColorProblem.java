/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ProjectTopics_GUIBUILDER.apps;

import java.awt.Color;

/**
 *
 * @author HP
 */
public class CheckBoxChangeColorProblem extends javax.swing.JFrame {

    
    public CheckBoxChangeColorProblem() {
        super("Color Changer App");
        initComponents();
        super.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        myPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        chkBoxRed = new javax.swing.JCheckBox();
        chkBoxGreen = new javax.swing.JCheckBox();
        chkBoxBlue = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Color Changer App");

        chkBoxRed.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        chkBoxRed.setForeground(new java.awt.Color(255, 51, 51));
        chkBoxRed.setText("RED");
        chkBoxRed.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkBoxRedItemStateChanged(evt);
            }
        });

        chkBoxGreen.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        chkBoxGreen.setForeground(new java.awt.Color(0, 204, 0));
        chkBoxGreen.setText("GREEN");
        chkBoxGreen.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkBoxGreenItemStateChanged(evt);
            }
        });

        chkBoxBlue.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        chkBoxBlue.setForeground(new java.awt.Color(0, 0, 255));
        chkBoxBlue.setText("BLUE");
        chkBoxBlue.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkBoxBlueItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout myPanelLayout = new javax.swing.GroupLayout(myPanel);
        myPanel.setLayout(myPanelLayout);
        myPanelLayout.setHorizontalGroup(
            myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myPanelLayout.createSequentialGroup()
                .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(myPanelLayout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(jLabel1))
                    .addGroup(myPanelLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(chkBoxRed)
                        .addGap(68, 68, 68)
                        .addComponent(chkBoxGreen)
                        .addGap(74, 74, 74)
                        .addComponent(chkBoxBlue)))
                .addContainerGap(147, Short.MAX_VALUE))
        );
        myPanelLayout.setVerticalGroup(
            myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 136, Short.MAX_VALUE)
                .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkBoxGreen)
                    .addComponent(chkBoxRed)
                    .addComponent(chkBoxBlue))
                .addGap(116, 116, 116))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(myPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(myPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkBoxRedItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkBoxRedItemStateChanged
     if (chkBoxRed.isSelected() && chkBoxGreen.isSelected() && chkBoxBlue.isSelected()) {
        myPanel.setBackground(Color.WHITE);
    } else if (chkBoxRed.isSelected() && chkBoxGreen.isSelected()) {
        myPanel.setBackground(Color.YELLOW);
    } else if (chkBoxRed.isSelected() && chkBoxBlue.isSelected()) {
        myPanel.setBackground(Color.MAGENTA);
    } else if (chkBoxRed.isSelected()) {
        myPanel.setBackground(Color.RED);
    }else if (chkBoxRed.isSelected()&&!chkBoxGreen.isSelected()) {
        myPanel.setBackground(Color.RED);
    } else if (!chkBoxRed.isSelected() && !chkBoxGreen.isSelected() && !chkBoxBlue.isSelected()) {
        myPanel.setBackground(Color.BLACK);
    }else if (chkBoxRed.isSelected()&&!chkBoxBlue.isSelected()) {
        myPanel.setBackground(Color.RED);
    }else if (chkBoxBlue.isSelected()&&!chkBoxRed.isSelected()) {
        myPanel.setBackground(Color.BLUE);
    
    }else if (chkBoxRed.isSelected() && chkBoxBlue.isSelected()&&!chkBoxGreen.isSelected()) {
        myPanel.setBackground(Color.MAGENTA);
    } else if (chkBoxGreen.isSelected()&&!chkBoxRed.isSelected()) {
        myPanel.setBackground(Color.GREEN);
    }
    }//GEN-LAST:event_chkBoxRedItemStateChanged

    private void chkBoxGreenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkBoxGreenItemStateChanged
        if (chkBoxGreen.isSelected() && chkBoxRed.isSelected() && chkBoxBlue.isSelected()) {
        myPanel.setBackground(Color.WHITE);
    }else if (chkBoxRed.isSelected() && chkBoxGreen.isSelected()) {
        myPanel.setBackground(Color.YELLOW);
    } else if (chkBoxGreen.isSelected() && chkBoxBlue.isSelected()) {
        myPanel.setBackground(Color.CYAN);
    } else if (chkBoxGreen.isSelected()) {
        myPanel.setBackground(Color.GREEN);
    }  else if (chkBoxGreen.isSelected()&&!chkBoxBlue.isSelected()) {
        myPanel.setBackground(Color.GREEN);
    } else if (!chkBoxRed.isSelected() && !chkBoxGreen.isSelected() && !chkBoxBlue.isSelected()) {
        myPanel.setBackground(Color.BLACK);
    }else if (chkBoxRed.isSelected()&&!chkBoxGreen.isSelected()) {
        myPanel.setBackground(Color.RED);
    }else if (chkBoxBlue.isSelected()&&!chkBoxGreen.isSelected()) {
        myPanel.setBackground(Color.BLUE);
    
    } else if (chkBoxGreen.isSelected() && chkBoxBlue.isSelected()&&!chkBoxRed.isSelected()) {
        myPanel.setBackground(Color.CYAN);
    } else if (chkBoxGreen.isSelected()&&!chkBoxRed.isSelected()) {
        myPanel.setBackground(Color.GREEN);
    }
    }//GEN-LAST:event_chkBoxGreenItemStateChanged

    private void chkBoxBlueItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkBoxBlueItemStateChanged
       if (chkBoxBlue.isSelected() && chkBoxRed.isSelected() && chkBoxGreen.isSelected()) {
        myPanel.setBackground(Color.WHITE);
    }else if (chkBoxRed.isSelected() && chkBoxBlue.isSelected()) {
        myPanel.setBackground(Color.MAGENTA);
    }else if (chkBoxBlue.isSelected() && chkBoxGreen.isSelected()) {
        myPanel.setBackground(Color.CYAN);
    } else if (chkBoxBlue.isSelected()) {
        myPanel.setBackground(Color.BLUE);
    }else if (chkBoxBlue.isSelected()&&!chkBoxGreen.isSelected()) {
        myPanel.setBackground(Color.BLUE);
    } 
    else if (!chkBoxRed.isSelected() && !chkBoxGreen.isSelected() && !chkBoxBlue.isSelected()) {
        myPanel.setBackground(Color.BLACK);
    } else if (chkBoxGreen.isSelected()&&!chkBoxBlue.isSelected()) {
        myPanel.setBackground(Color.GREEN);
    }else if (chkBoxRed.isSelected()&&!chkBoxBlue.isSelected()) {
        myPanel.setBackground(Color.RED);
    }else if (chkBoxBlue.isSelected()&&!chkBoxRed.isSelected()) {
        myPanel.setBackground(Color.BLUE);
    }else if (chkBoxRed.isSelected() && chkBoxBlue.isSelected()&& !chkBoxGreen.isSelected()) {
        myPanel.setBackground(Color.MAGENTA);
    } else if (chkBoxGreen.isSelected() && chkBoxBlue.isSelected()&& !chkBoxRed.isSelected()) {
        myPanel.setBackground(Color.CYAN);
    }
    }//GEN-LAST:event_chkBoxBlueItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckBoxChangeColorProblem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckBoxChangeColorProblem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckBoxChangeColorProblem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckBoxChangeColorProblem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckBoxChangeColorProblem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkBoxBlue;
    private javax.swing.JCheckBox chkBoxGreen;
    private javax.swing.JCheckBox chkBoxRed;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel myPanel;
    // End of variables declaration//GEN-END:variables
}
